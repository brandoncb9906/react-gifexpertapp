{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifts","category","a","URL","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","url","images","downsized_medium","console","log","useFetchGifs","loading","state","setState","useEffect","then","imgs","setTimeout","GifGridItem","className","src","alt","GifGrid","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"yMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAkB9C,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IACxBR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEdC,EAFc,iDAEkCC,UAAUH,GAF5C,+DAGDI,MAAMF,GAHL,cAGdG,EAHc,gBAICA,EAAKC,OAJN,uBAIbC,EAJa,EAIbA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MACI,CACIC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MAGXC,IAAG,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBF,QAI9CG,QAAQC,IAAIT,GAjBQ,kBAkBbA,GAlBa,4CAAH,sDCyBNU,EAxBM,SAAElB,GAAe,IAAD,EAEPd,mBAAS,CAC/BqB,KAAM,GACNY,SAAS,IAJoB,mBAE1BC,EAF0B,KAEnBC,EAFmB,KAqBjC,OAdAC,qBAAW,WAEPvB,EAAUC,GACLuB,MAAM,SAAAC,GACHC,YAAW,WACPJ,EAAS,CACLd,KAAMiB,EACNL,SAAS,MAEd,WAGZ,CAACnB,IAEGoB,GCrBI,SAASM,EAAT,GAAoC,IAAdd,EAAa,EAAbA,MAAOC,EAAM,EAANA,IAExC,OACI,sBAAKc,UAAU,wCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMjB,IACvB,6BAAKA,OCHV,IAAMkB,EAAU,SAAC,GAAgB,IAAf9B,EAAc,EAAdA,SAAc,EAEFkB,EAAalB,GAAjCc,EAFsB,EAE5BP,KAAcY,EAFc,EAEdA,QAErB,OACI,qCACI,qBAAIQ,UAAU,0CAAd,cAA2D3B,EAA3D,OAEC,sBAAK2B,UAAU,YAAf,UACIR,GACG,mBAAGQ,UAAU,qCAAb,qBAIAb,EAAOL,KAAI,SAAAC,GAAG,OACV,cAACgB,EAAD,eAEShB,GADAA,EAAIC,cChBxBoB,EAAe,WAAM,MAGM7C,mBAAS,CAAC,cAHhB,mBAGvB8C,EAHuB,KAGX/C,EAHW,KAY9B,OAEI,cADA,CACA,sBACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BAEQ+C,EAAWvB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CACIA,SAAWA,GACLA,Y,MCtBlCiC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e8c4ecdd.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length>2){\r\n            setCategories( cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit= {handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value= {inputValue}\r\n                onChange = { handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired  \r\n}\r\n","//const API_KEY = 'usX1dos7z2PldIX4Bp9CaKpAu6rBRy0g';\r\nexport const getGifts = async (category) => {\r\n\r\n    const URL = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=usX1dos7z2PldIX4Bp9CaKpAu6rBRy0g`\r\n    const resp = await fetch(URL);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return (\r\n            {   \r\n                id: img.id,\r\n                title: img.title,\r\n                // El signo de pregunta es para ver si \r\n                // trae la data entonces la usa\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        )\r\n    })\r\n    console.log(gifs)\r\n    return gifs;\r\n}","import { useEffect, useState } from \"react\"\r\nimport {getGifts} from '../helpers/getGifs'\r\nconst useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect( () =>{\r\n\r\n        getGifts( category )\r\n            .then( imgs => {\r\n                setTimeout(() => {\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    })\r\n                }, 1500);\r\n            } )\r\n\r\n    }, [category])\r\n\r\n    return state; // {data: [], loading:true}\r\n}\r\n\r\nexport default useFetchGifs;","import React from 'react'\r\n\r\nexport default function GifGridItem({title, url}) {\r\n\r\n    return (\r\n        <div className='card animate__animated animate__pulse'>  \r\n            <img src={ url } alt={ title }/>\r\n            <h5>{title}</h5>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport useFetchGifs from \"../hooks/useFetchGifs\"\r\nimport GifGridItem from './GifGridItem'\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n   const { data: images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>  \r\n            <h3 className='animate__animated animate__bounceInLeft'> { category } </h3>\r\n\r\n            {<div className='card-grid'>\r\n                {loading && \r\n                    <p className='animate__animated animate__flipInX'>\r\n                        Loading\r\n                    </p>}\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem \r\n                            key={img.id} \r\n                            { ...img }\r\n                        />\r\n                    ))\r\n                }\r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n//rafc\r\nexport const GifExpertApp = () => {\r\n\r\n    //const categories = ['One Punch', 'Samurai X', 'Dragon Ball']\r\n    const [categories, setCategories] = useState(['One Punch'])\r\n    \r\n    /*\r\n    const handleAdd = () => {\r\n        setCategories([...categories, 'HunterXHunter']);\r\n\r\n    }\r\n    */\r\n    \r\n    return (\r\n        //Comunicacion entre componentes distintos\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                    categories.map(category =>  (\r\n                        <GifGrid \r\n                            category= {category}\r\n                            key= {category}\r\n                            />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}